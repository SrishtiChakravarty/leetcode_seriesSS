Given the head of a linked list, remove the nth node from the end of the list and return its head. Remove Nth Node From End of List

Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]


TC=0(N)






#include <bits/stdc++.h> 
#include <bits/stdc++.h> 
/****************************************************************

    Following is the class structure of the LinkedListNode class:

    template <typename T>
    class LinkedListNode
    {
    public:
        T data;
        LinkedListNode<T> *next;
        LinkedListNode(T data)
        {
            this->data = data;
            this->next = NULL;
        }
    };

*****************************************************************/

LinkedListNode<int>* removeKthNode(LinkedListNode<int> *head, int K)
{
    LinkedListNode<int>* start= new LinkedListNode<int>(1);
    start->next=head;
      LinkedListNode<int>* fast=start;
        LinkedListNode<int>* slow=start;
    if(head==NULL||K==0) return head;
    for(int i=0;i<K;i++){
        fast=fast->next;
    }
    
    while(fast->next!=NULL){
        fast=fast->next;
        slow=slow->next;
    }
    slow->next=slow->next->next;
    return start->next;
    
}
